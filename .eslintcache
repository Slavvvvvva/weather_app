[{"F:\\weather_app\\src\\index.js":"1","F:\\weather_app\\src\\reportWebVitals.js":"2","F:\\weather_app\\src\\App.js":"3","F:\\weather_app\\src\\components\\Header\\header.js":"4","F:\\weather_app\\src\\components\\Redux\\global-settings-reduser.js":"5","F:\\weather_app\\src\\components\\Redux\\store.js":"6","F:\\weather_app\\src\\components\\YourPlace\\your-place.js":"7","F:\\weather_app\\src\\components\\YourPlace\\CityCard\\city-card.js":"8","F:\\weather_app\\src\\components\\Redux\\weather-reduser.js":"9","F:\\weather_app\\src\\components\\API\\weather-api.js":"10","F:\\weather_app\\src\\components\\DetailWeather\\detail-weather.js":"11","F:\\weather_app\\src\\components\\DetailWeather\\DatailWeatherItem\\detail-weather-item.js":"12","F:\\weather_app\\src\\components\\Util\\form.js":"13"},{"size":418,"mtime":1610990621681,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1383,"mtime":1614090239398,"results":"17","hashOfConfig":"15"},{"size":3156,"mtime":1614522553837,"results":"18","hashOfConfig":"15"},{"size":1883,"mtime":1614207426982,"results":"19","hashOfConfig":"15"},{"size":647,"mtime":1613156323035,"results":"20","hashOfConfig":"15"},{"size":2819,"mtime":1614211628256,"results":"21","hashOfConfig":"15"},{"size":3947,"mtime":1614526294236,"results":"22","hashOfConfig":"15"},{"size":4203,"mtime":1614211733986,"results":"23","hashOfConfig":"15"},{"size":855,"mtime":1613996493737,"results":"24","hashOfConfig":"15"},{"size":6182,"mtime":1614526272332,"results":"25","hashOfConfig":"15"},{"size":749,"mtime":1612716846782,"results":"26","hashOfConfig":"15"},{"size":325,"mtime":1613474249133,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cr0rgk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\weather_app\\src\\index.js",[],["57","58"],"F:\\weather_app\\src\\reportWebVitals.js",[],"F:\\weather_app\\src\\App.js",["59"],"import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport s from './App.module.scss';\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport classNames from 'classnames/bind'\nimport Header from './components/Header/header';\nimport YourPlace from './components/YourPlace/your-place';\nimport DetailWeather from './components/DetailWeather/detail-weather';\n\n\nconst App = (props) => {\n\n  let cx = classNames.bind(s);\n  const classNameH =cx({\n        head: true,\n        head_black: props.darckMode\n    })\n  const classNameC =cx({\n      content: true,\n      content_black: props.darckMode\n  })\n  const classNameB =cx({\n    body: true,\n    body_black: props.darckMode\n})\n\n  return (\n    <HashRouter>\n      <div className={classNameB}>\n        <div className={classNameH}>\n          <Header/>\n        </div>\n        <div className={classNameC}>\n          <Switch>\n            <Route path='/detail/:sityId' render={() => <DetailWeather/>} />\n            <Route exact path='/' render={() => <YourPlace/>}/>\n            <Route path='/*' render={() => <h1> 404 page not found </h1>} />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n\n  )\n\n}\n\nlet mapStateToProps = (state) =>{\n  return{\n      darckMode: state.GlobalSettings.darkMode,\n  }\n}\nexport default compose(\n  connect(mapStateToProps,{})\n) (App)\n\n\n","F:\\weather_app\\src\\components\\Header\\header.js",[],"F:\\weather_app\\src\\components\\Redux\\global-settings-reduser.js",[],"F:\\weather_app\\src\\components\\Redux\\store.js",[],"F:\\weather_app\\src\\components\\YourPlace\\your-place.js",["60","61"],"import React, { useEffect } from 'react'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { compose } from 'redux'\r\nimport y from './y.module.scss'\r\nimport classNames from 'classnames/bind'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentWeatherIdTC, getCurrentWeatherTC } from '../Redux/weather-reduser'\r\nimport {setModeAC} from '../Redux/global-settings-reduser'\r\nimport CityCard from './CityCard/city-card'\r\nimport store from 'store'\r\nimport { Input } from '../Util/form'\r\n\r\n\r\n\r\nconst YourPlace = (props) => {\r\n    let mode = store.get('darckMode')\r\n    let lang = store.get('appLanguage')\r\n    useEffect(() => {\r\n        props.setModeAC(mode, lang)\r\n        let citymass = store.get('city')\r\n        if (citymass && (props.CurrentWeather.length == 0)) {  \r\n            citymass.forEach((i) => {\r\n                props.getCurrentWeatherIdTC(i,lang)\r\n            })\r\n        }\r\n    }, [mode, lang])\r\n\r\n    let cx = classNames.bind(y);\r\n    const className = cx({\r\n        add_card: true,\r\n        add_card_dark: props.darckMode\r\n    })\r\n\r\n    const AddNewCity= (formData) => {\r\n        props.getCurrentWeatherTC(formData.cityName, props.appLanguage)\r\n    }\r\n\r\n    const ShowCityCard = props.CurrentWeather.map((item, i) => {\r\n        return (\r\n            <CityCard city={item.massege} CurrentWeather={props.CurrentWeather[i]} key={`${i}gjkfjgk`} />\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <>\r\n            {props.CurrentWeather && ShowCityCard}\r\n            <div className={className}>\r\n                <AddCityCardReduxForm onSubmit={AddNewCity} {...props}/>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nlet notAmptyRU = (value) => {\r\n    if (value) return undefined\r\n    return (\r\n        <p className = {y.valdation}>ты не можешь отправить пустое поле</p>\r\n    )\r\n}\r\nlet notAmptyENG = (value) => {\r\n    if (value) return undefined\r\n    return (\r\n        <p className = {y.valdation}>you can't send an empty field</p>\r\n    )\r\n}\r\n\r\nconst AddCityCardForm = (props) => {\r\n    return (\r\n        <form className={y.form} onSubmit={props.handleSubmit} >\r\n            <Field placeholder={`${(props.appLanguage ==='ru')? 'ГОРОД':'ADD CITY'}`} name={'cityName'} component={Input} className={y.input} validate = {(props.appLanguage ==='ru')?[notAmptyRU]:[notAmptyENG]}></Field>\r\n            <button></button>\r\n        </form>\r\n    )\r\n}\r\nconst AddCityCardReduxForm = reduxForm({ form:'AddCity' })(AddCityCardForm)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        darckMode: state.GlobalSettings.darkMode,\r\n        CurrentWeather: state.Weather.CurrentWeather,\r\n        appLanguage: state.GlobalSettings.appLanguage\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { getCurrentWeatherIdTC, getCurrentWeatherTC, setModeAC })\r\n)(YourPlace)","F:\\weather_app\\src\\components\\YourPlace\\CityCard\\city-card.js",["62"],"F:\\weather_app\\src\\components\\Redux\\weather-reduser.js",[],"F:\\weather_app\\src\\components\\API\\weather-api.js",[],"F:\\weather_app\\src\\components\\DetailWeather\\detail-weather.js",["63"],"F:\\weather_app\\src\\components\\DetailWeather\\DatailWeatherItem\\detail-weather-item.js",[],"F:\\weather_app\\src\\components\\Util\\form.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":22,"nodeType":"70","messageId":"71","endLine":2,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":21,"column":54,"nodeType":"74","messageId":"75","endLine":21,"endColumn":56},{"ruleId":"76","severity":1,"message":"77","line":26,"column":8,"nodeType":"78","endLine":26,"endColumn":20,"suggestions":"79"},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"81","line":41,"column":8,"nodeType":"78","endLine":41,"endColumn":43,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["85"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'lang' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [mode, lang, props]",{"range":"91","text":"92"},"Update the dependencies array to be: [lon, lat, mode, props.appLanguage, props, lang]",{"range":"93","text":"94"},[904,916],"[mode, lang, props]",[1816,1851],"[lon, lat, mode, props.appLanguage, props, lang]"]