[{"F:\\weather_app\\src\\index.js":"1","F:\\weather_app\\src\\reportWebVitals.js":"2","F:\\weather_app\\src\\App.js":"3","F:\\weather_app\\src\\components\\Header\\header.js":"4","F:\\weather_app\\src\\components\\Redux\\global-settings-reduser.js":"5","F:\\weather_app\\src\\components\\Redux\\store.js":"6","F:\\weather_app\\src\\components\\YourPlace\\your-place.js":"7","F:\\weather_app\\src\\components\\YourPlace\\CityCard\\city-card.js":"8","F:\\weather_app\\src\\components\\Redux\\weather-reduser.js":"9","F:\\weather_app\\src\\components\\API\\weather-api.js":"10","F:\\weather_app\\src\\components\\DetailWeather\\detail-weather.js":"11","F:\\weather_app\\src\\components\\DetailWeather\\DatailWeatherItem\\detail-weather-item.js":"12"},{"size":418,"mtime":1610990621681,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1615,"mtime":1611673622863,"results":"16","hashOfConfig":"14"},{"size":1044,"mtime":1610992021976,"results":"17","hashOfConfig":"14"},{"size":496,"mtime":1610991432167,"results":"18","hashOfConfig":"14"},{"size":626,"mtime":1611169516340,"results":"19","hashOfConfig":"14"},{"size":1788,"mtime":1612285710746,"results":"20","hashOfConfig":"14"},{"size":2798,"mtime":1612289880120,"results":"21","hashOfConfig":"14"},{"size":2709,"mtime":1612292089020,"results":"22","hashOfConfig":"14"},{"size":817,"mtime":1611932718658,"results":"23","hashOfConfig":"14"},{"size":3563,"mtime":1612324198054,"results":"24","hashOfConfig":"14"},{"size":702,"mtime":1612321430820,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1r1goti",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"F:\\weather_app\\src\\index.js",[],["55","56"],"F:\\weather_app\\src\\reportWebVitals.js",[],"F:\\weather_app\\src\\App.js",["57"],"import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport s from './App.module.scss';\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport classNames from 'classnames/bind'\nimport Header from './components/Header/header';\nimport YourPlace from './components/YourPlace/your-place';\nimport DetailWeather from './components/DetailWeather/detail-weather';\n\n\nconst App = (props) => {\n\n  let cx = classNames.bind(s);\n  const classNameH =cx({\n        head: true,\n        head_black: props.darckMode\n    })\n  const classNameC =cx({\n      content: true,\n      content_black: props.darckMode\n  })\n  const classNameB =cx({\n    body: true,\n    body_black: props.darckMode\n})\n\n  return (\n    <BrowserRouter>\n      <div className={classNameB}>\n        <div className={classNameH}>\n          <Header/>\n        </div>\n        <div className={classNameC}>\n          <Switch>\n            {/* {<Route path='/myprofile/:userId?' render={() => <UserContainer />} />\n            <Route path='/meseges' render={() => <ChatContainer />} />\n            <Route path='/login' render={() => <Login />} /> */}\n            <Route path='/detail/:sityId' render={() => <DetailWeather/>} />\n            <Route exact path='/' render={() => <YourPlace/>}/>\n            <Route path='/*' render={() => <h1> 404 page not found </h1>} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n\n  )\n\n}\n\nlet mapStateToProps = (state) =>{\n  return{\n      darckMode: state.GlobalSettings.darkMode,\n  }\n}\nexport default compose(\n  connect(mapStateToProps,{})\n) (App)\n\n\n","F:\\weather_app\\src\\components\\Header\\header.js",[],"F:\\weather_app\\src\\components\\Redux\\global-settings-reduser.js",[],"F:\\weather_app\\src\\components\\Redux\\store.js",[],"F:\\weather_app\\src\\components\\YourPlace\\your-place.js",["58","59"],"import React, { useEffect } from 'react'\r\nimport { compose } from 'redux';\r\nimport y from './y.module.scss'\r\nimport classNames from 'classnames/bind';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentWeatherIdTC, getCurrentWeatherTC  } from '../Redux/weather-reduser'\r\nimport CityCard from './CityCard/city-card'\r\nimport store from 'store'\r\n\r\n\r\nconst YourPlace = (props) => {\r\n\r\n     useEffect(() => {\r\n         let citymass = store.get('city')\r\n         debugger \r\n         if (citymass && (props.CurrentWeather.length == 0 )) {\r\n             //add chack props \r\n             citymass.forEach((i) => {\r\n                 props.getCurrentWeatherIdTC(i)\r\n             })\r\n         }\r\n     }, [])\r\n \r\n\r\n    let cx = classNames.bind(y);\r\n    const className = cx({\r\n        add_card: true,\r\n        add_card_dark: props.darckMode\r\n    })\r\n\r\n    let cityName = React.createRef()\r\n\r\n    const AddNevSity = () => {\r\n        props.getCurrentWeatherTC(cityName.current.value)\r\n    }\r\n\r\n    const ShowCityCard = props.CurrentWeather.map((item, i) => {\r\n        return (\r\n            <CityCard city={item.massege} CurrentWeather={props.CurrentWeather[i]} key={`${i}gjkfjgk`} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {props.CurrentWeather && ShowCityCard}\r\n            <div className={className}>\r\n                <p>Add city</p>\r\n                <textarea ref={cityName} onBlur={AddNevSity}></textarea>\r\n                <button></button>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        darckMode: state.GlobalSettings.darkMode,\r\n        CurrentWeather: state.Weather.CurrentWeather\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { getCurrentWeatherIdTC, getCurrentWeatherTC })\r\n)(YourPlace)","F:\\weather_app\\src\\components\\YourPlace\\CityCard\\city-card.js",["60"],"import React, { useEffect } from 'react'\r\nimport { compose } from 'redux'\r\nimport c from './c.module.scss'\r\nimport classNames from 'classnames/bind'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentWeatherTC } from '../../Redux/weather-reduser'\r\nimport sun from '../../IMG/weatherIcon/SunIcon.svg'\r\nimport littleCloud from '../../IMG/weatherIcon/cloudyIcon.svg'\r\nimport cloud from '../../IMG/weatherIcon/BigCloud.svg'\r\nimport rain from '../../IMG/weatherIcon/RainIcon.svg'\r\nimport storm from '../../IMG/weatherIcon/Stromicon.svg'\r\nimport snow from '../../IMG/weatherIcon/SnowingIcon.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst CityCard = (props) => {\r\n\r\n    let cx = classNames.bind(c);\r\n    const className = cx({\r\n        add_card: true,\r\n        add_card_dark: props.darckMode\r\n    })\r\n    const iconSelector = () => {\r\n        switch (props.CurrentWeather.weather[0].icon) {\r\n            case '01d': return sun\r\n            case '01n': return sun\r\n            case '02d': return littleCloud\r\n            case '02n': return littleCloud\r\n            case '03d': return cloud\r\n            case '03n': return cloud\r\n            case '04d': return cloud\r\n            case '04n': return cloud\r\n            case '09d': return rain\r\n            case '09n': return rain\r\n            case '10d': return rain\r\n            case '10n': return rain\r\n            case '11d': return storm\r\n            case '11n': return storm\r\n            case '13d': return snow\r\n            case '13n': return snow\r\n            case '50d': return littleCloud\r\n            case '50n': return littleCloud\r\n            default: return sun\r\n        }\r\n    }\r\n\r\n    let sityCoord = `${props.CurrentWeather.coord.lon}_${props.CurrentWeather.coord.lat}`\r\n\r\n    if (!props.CurrentWeather) {\r\n        return (\r\n            <div className={className}>\r\n                <p>Loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n  \r\n\r\n    return (\r\n\r\n        <NavLink to = {`/detail/${sityCoord}`} className={className}>\r\n            <p>{props.CurrentWeather.name}</p>\r\n            <img src={iconSelector()} alt='weather icon' />\r\n            <div className={c.temperature} >\r\n                {Math.round(props.CurrentWeather.main.temp)}\r\n            </div>\r\n            <div className={c.des}> {props.CurrentWeather.weather[0].description}</div>\r\n            <div className={c.minmax} >\r\n                <div className={c.min}>{props.CurrentWeather.main.temp_min}</div>\r\n                <div className={c.max}>{props.CurrentWeather.main.temp_max}</div>\r\n            </div>\r\n        </NavLink>\r\n\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        darckMode: state.GlobalSettings.darkMode,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { getCurrentWeatherTC })\r\n)(CityCard)","F:\\weather_app\\src\\components\\Redux\\weather-reduser.js",[],"F:\\weather_app\\src\\components\\API\\weather-api.js",[],"F:\\weather_app\\src\\components\\DetailWeather\\detail-weather.js",["61","62"],"F:\\weather_app\\src\\components\\DetailWeather\\DatailWeatherItem\\detail-weather-item.js",["63"],"import React from 'react'\r\nimport di from './di.module.scss'\r\nimport classNames from 'classnames/bind'\r\n\r\nconst DatailItem  = (props) => {\r\n    let date = new Date(props.day*1000)\r\n    let day = date.toDateString().slice( 0 ,3)\r\n   \r\n    return (\r\n        <div className = {di.wrapper}>\r\n            <p className = {di.day}>{day}</p>\r\n            <div>\r\n                <img src = {props.icon} alt = 'weathaer icon' />\r\n            </div>\r\n                <p className = {di.temp}>{Math.round(props.daytemp)}&#176; </p>\r\n            <div className = {di.des}>\r\n                <p>{props.descriptions}</p>\r\n            </div>\r\n            \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default DatailItem",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":25,"nodeType":"70","messageId":"71","endLine":2,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":16,"column":55,"nodeType":"74","messageId":"75","endLine":16,"endColumn":57},{"ruleId":"76","severity":1,"message":"77","line":22,"column":9,"nodeType":"78","endLine":22,"endColumn":11,"suggestions":"79"},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":23,"column":7,"nodeType":"78","endLine":23,"endColumn":17,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"73","line":59,"column":37,"nodeType":"74","messageId":"75","endLine":59,"endColumn":39},{"ruleId":"68","severity":1,"message":"82","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":18},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["85"],"'useEffect' is defined but never used.",["86"],"'classNames' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [props]",{"range":"91","text":"92"},"Update the dependencies array to be: [lon, lat, props]",{"range":"93","text":"94"},[701,703],"[props]",[1012,1022],"[lon, lat, props]"]